---
- name:  Create {{ az_resourcegroup_name }} Resource Group on {{ az_region }}
  local_action:
    module: azure_rm_resourcegroup
    location: "{{ az_location }}"
    name: "{{ az_resourcegroup_name }}"
    state: present
    tags:
      purpose: "{{ az_environment }}"
#      customer: "{{ az_customer }}"
#   register: return_azrg

- name:  Create {{ az_virtualnet_name }} Virtual Network on {{ az_region }}
  local_action:
    module: azure_rm_virtualnetwork
    location: "{{ az_location }}"
    resource_group: "{{ az_resourcegroup_name }}"
    name: "{{ az_virtualnet_name }}"
    address_prefixes_cidr: "{{ az_vn_cidr_prefix }}"
    state: present
    tags:
      purpose: "{{ az_environment }}"
#      customer: "{{ az_customer }}"
   #    register: return_azvirtnet

- name:  Create {{ az_subnet_name }} Subnet on {{ az_region }}
  local_action:
    module: azure_rm_subnet
    name: "{{ az_subnet_name }}"
    resource_group: "{{ az_resourcegroup_name }}"
    virtual_network_name: "{{ az_virtualnet_name }}"
    address_prefix_cidr: "{{ az_sub_cidr_prefix }}"
    state: present
    tags:
      purpose: "{{ az_environment }}"
#      customer: "{{ az_customer }}"
#    register: return_azsubnet

- name:  Create {{ az_secgroup_name }} Security Group on {{ az_region }}
  local_action:
    module: azure_rm_securitygroup
    resource_group: "{{ az_resourcegroup_name }}"
    name: "{{ az_secgroup_name }}"
    rules:
      - name: SSH
        protocol: Tcp
        destination_port_range: 22
        access: Allow
        priority: 101
        direction: Inbound
      - name: RDP
        protocol: Tcp
        destination_port_range: 3389
        access: Allow
        priority: 102
        direction: Inbound
      - name: WINRM
        protocol: Tcp
        destination_port_range: 5986
        access: Allow
        priority: 103
        direction: Inbound
      - name: HTTP
        protocol: Tcp
        destination_port_range: 80
        access: Allow
        priority: 104
        direction: Inbound
      - name: HTTPS
        protocol: Tcp
        destination_port_range: 443
        access: Allow
        priority: 105
        direction: Inbound
#    register: return_azsubnet

- name: Create {{ az_availabilitysets_name }}
  local_action:
    module: azure_rm_availabilityset
    resource_group: "{{ az_resourcegroup_name }}"
    name: "{{ az_availabilitysets_name }}"
    location: "{{ az_location }}"

- name: Create public ip for {{ az_loadbalancer_name }}
  local_action:
    module: azure_rm_publicipaddress
    resource_group: "{{ az_resourcegroup_name }}"
    allocation_method: "{{ az_public_ip_method }}"
    name: "{{ az_lb_public_ip_name }}"
  register: r_lb_public_ip

- name: Create {{ az_loadbalancer_name }}
  local_action:
    module: azure_rm_loadbalancer
    resource_group: "{{ az_resourcegroup_name }}"
    name: "{{ az_loadbalancer_name }}"
    location: "{{ az_location }}"
    frontend_ip_configurations:
      - name: "{{ az_loadbalancer_name }}-frontend"
        public_ip_address: "{{ r_lb_public_ip.state.ip_address }}"
    backend_address_pools:
      - name: "{{ az_loadbalancer_name }}-web-srv"
    probes:
      - name: "{{ az_loadbalancer_name }}-probe"
        protocol: Tcp
        port: 8080
        interval: 1
        fail_count: 3
    load_balacing_rules:
      - name: "{{ az_loadbalancer_name }}-rule"
        protocol: Tcp
        frontend_ip_configuration: "{{ az_loadbalancer_name }}-frontend"
        probe: "{{ az_loadbalancer_name }}-probe"
        load_distribution: Default
        backend_address_pools: "{{ az_loadbalancer_name }}-web-srv"
        frontend_port: 80
        backend_port: 8080
        idle_timeout: 4
    state: present
